version: '3.8'            # Version 3.8 is quite new and should work

services:
  app:                    # The name of the service, can be anything
    image: express-server # Declares which image to use
    build: ./todo-backend # Declares where to build if image is not found
    ports:                # Declares the ports to publish
      - 3000:3000

  mongo:
    image: mongo
    ports:
     - 3456:27017
    environment: 
      - MONGO_URL=mongodb://root:example@localhost:3456/the_database     
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
          - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
          - ./mongo_data:/data/db
  
  redis:
    image: redis
    ports:
     - 6379:6379
    environment: 
      - REDIS_URL=//localhost:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./redis_data:/data

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
  
  app:
    image: todo-frontend
    build:
      context: . # The context will pick this directory as the "build context"
      dockerfile: toto-frontend/Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3210:3000
    container_name: todo-frontend
  debug-helper:
    image: busybox

volumes:
  mongo_data:
